---
import HeroContainer from "@components/hero/HeroContainer.astro";
import ButtonRounded from '@components/buttons/ButtonRounded';

import { parseImageData } from "@utils";
import { Image} from "astro:assets";
import iconandroid from '@assets/svg/android-white.svg';
import iconapple from '@assets/svg/apple.svg';
const iconsList = [iconapple, iconandroid,];
const {data} = Astro.props;
const btns = data?.btn;
const title = data?.title;
const desktop = parseImageData(data?.coverImage.data, 'desktop')
const mobile = parseImageData(data?.coverImage.data, 'mobile')
const pictures = [mobile, desktop]; 
---
<HeroContainer
    pictures={pictures}
    coverSeo={data?.coverSeo}
    title={title}
    description=''
    textTopSpaceMobile={"-mt-[35%]"}
    textBoxWidth={"w-[380px] sm:w-2/3 lg:w-[480px]"}
>
    <div class="flex flex-col sm:flex-row gap-4 mb-4 sm:mb-0" slot="btn-box">
        {
            btns.map((item, index) => {
                const name = item.name;
                const link = item.link;
                const color = item.type;
                const isIcon = item.btnIcon.data;
                const btnIcon = isIcon?.attributes?.url;
                return(
                    <ButtonRounded 
                        size="xl"
                        link={link}
                        title={name}
                        color={color}
                        className="w-full sm:w-auto flex flex-row gap-4 justify-center z-50"
                    >
                        {isIcon && (
                            <Image
                                src={iconsList[index]}
                                width="20"
                                height="20"
                                loading="lazy"
                                alt={isIcon?.attributes?.alternativeText || ''}
                                class="h-[20px]"
                            />
                        )}
                    </ButtonRounded>
                )
            })
        }
    </div>
</HeroContainer>
