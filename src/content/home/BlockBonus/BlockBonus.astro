---
import { getFields } from "@utils";
import SliderContainer from "@components/slider/SliderContainer";
import RichText from "@components/richtext/RichText.astro";
import WithBottom from "@components/spaces/WithBottom.astro";

const {data, bonusDescription}=Astro.props;
const title = data?.bonusSliderTitle;
const bonusItem = data?.bonusItem;
const sliderBonusesList = bonusItem?.map((item, index)=>{
    return({
        text: item?.title || '',
        description: item?.description || '',
        imageLink: item?.imageLink || '#',
        imageData: getFields(item?.imageCover?.data?.attributes),
        buttons: item?.buttons || []
    })
});
---
<div class="overflow-hidden pt-4">
    {!!title?.length &&
        <RichText
            data={title}
        />
    }
    {!!sliderBonusesList?.length && 
        <SliderContainer
            client:load
            list={sliderBonusesList}
            noInfiniti={true}
            itemComponentName="SliderItem2"
        />
    }
    {!!bonusDescription.length &&
    <WithBottom>
      <section class="bg-pnp/[.03] border border-pnp/[.1] rounded-[24px] sm:rounded-[30px] px-[24px] py-[24px] sm:px-[32px] sm:py-[32px] bg-gradient-to-bl from-pnp-red/[.4] to-50% ">
        <ul class=" grid max-w-xl grid-cols-1 gap-8 text-base leading-7 text-gray-700 lg:max-w-none lg:grid-cols-3">
            { bonusDescription.map(item =>{
              return (
                  <li>
                    <RichText
                        data={item.descrition}
                        styles={{
                          h3: '!text-24-26-700 mb-4 text-pnp',
                          paragraph: '!text-16-24-400 text-pnp-grey20'
                        }}
                    />
                  </li>
              )
            })}
        </ul>
      </section>
    </WithBottom>
    }
</div>