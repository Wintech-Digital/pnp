---
import RichText from "@components/richtext/RichText.astro";
import SliderContainer from "@components/slider/SliderContainer";
import slideimg1 from '@assets/images/slides/ofertas/pro-special-offer-1-min.svg';
import slideimg2 from '@assets/images/slides/ofertas/pro-special-offer-2-min.svg';
import slideimg3 from '@assets/images/slides/ofertas/pro-special-offer-3-min.svg';
import { getFields } from "@utils";

const {data} = Astro.props;
const title = data?.title;
const slides = data?.slides;
const slidesList = [ slideimg1, slideimg2, slideimg3 ];
const sliderList = slides.map((item,index) => {
    const text = item?.title || '';
    const link = item?.url || '';
    const description = item?.description || '';
    const picinfo = getFields(item?.coverImage?.data?.attributes);
    const pic = {
        url: slidesList[index].src,
        alternativeText: picinfo.alternativeText,
        w: 102,
        h: 136,
        format: '.svg'
    }

    return ({
        pic,
        text,
        link,
        description,
    })
})
---

{  Array.isArray(title) 
    ? (<RichText
            data={title}
            styles={{
                h2: 'w-full',
                h3: 'w-full'
            }}
        />)
    : ( <h2 class="text-24-36-700 text-pnp">{title}</h2> )
}
<div class="overflow-hidden pt-4 mt-4">
    {!!sliderList?.length &&
        <SliderContainer
            client:load
            list={sliderList}
            noInfiniti={true}
            itemComponentName="SliderItem"
        />
    }
</div>
