---
import SliderContainer from "@components/slider/SliderContainer";
import SliderItem4 from '@components/slider/SliderItem4';
import RichText from '@components/richtext/RichText.astro';
import Table from "@components/table/TableDynamic.astro";
import { getFields } from "@utils";

const gridList = 'sm:grid sm:gap-6 sm:grid-cols-2 md:gap-6 md:grid-cols-3 lg:gap-6 lg:grid-cols-3 xl:gap-6 xl:grid-cols-4';
const flexList = 'flex flex-row overflow-x-scroll gap-4';

const {data} = Astro.props;
const guidesteps = data?.guidesteps;
const guidetitle = data?.guidetitle;
const guideslider = data?.guideslider;
const guidetable = data?.guidetable;
const sliderData = guideslider.map(item=>{
    return({
        text: item?.title || '',
        description: item?.description || '',
        pic: getFields(item?.coverImage?.data?.attributes) || ''
    })
})
---
<RichText
    data={guidetitle}
/>

<div class="overflow-hidden pt-4 block sm:hidden">
    <SliderContainer
        client:load
        list={sliderData}
        noInfiniti={true}
        itemComponentName="SliderItem4"
    />
</div>

<ul class=`${flexList} ${gridList} mb-[32px] hidden sm:block`>
    { sliderData.map((item, index)=> (
        <li>
            <SliderItem4
                text={item.text}
                description={item.description}
                pic={item.pic}
                ind={index}
            />
        </li>
    ))}
</ul>

<RichText
    data={guidesteps}
    styles={{
        paragraph: 'mb-4',
        list: 'mb-6'
    }}
/>

<Table data={guidetable}/>