---
import Layout from "@layout/Layout.astro";
import WithBottom from "@components/spaces/WithBottom.astro";
import { endpoints, fetchApi } from "@api/index";
import BonusHero from "@content/bonus/BonusHero.astro";
import AccordionContainer from "@components/accordion/AccordionContainer.astro";
import RichText from "@components/richtext/RichText.astro";
import { getFields } from "@utils";
import SlotSlideBox from "@content/slot/SlotSlideBox.astro";

const slotsPages = await fetchApi({ endpoint: endpoints.slotsSlide });
const slotsAttributes = slotsPages['data'];
const slotsSliderList = slotsAttributes.map(item => {
    const attrs = item?.attributes;
    const imagePath = attrs?.slotInSlide?.coverImage?.data?.attributes;
    return({
        ...attrs?.slotInSlide,
        coverImage: getFields(imagePath)
    })
})

const pageSchema = await fetchApi({ endpoint: endpoints.slotsCommonPage });
const pageAttributes = pageSchema['data']?.attributes;
const dataSeo = pageAttributes?.seo;
const dataHero = pageAttributes?.hero;
const dataSlotsDescription = pageAttributes?.slotsDescription;
const faqData = pageAttributes?.faqBlock;
---
<Layout seo={dataSeo}>
    { dataHero &&
        <WithBottom>
            <BonusHero data={dataHero}/>
        </WithBottom>
    }

    <h2 class="text-34-37-700 mb-5">
        Pin-Up Slots
    </h2>
  
    { !!slotsSliderList.length && 
        <div class="grid gap-[30px] mb-8 mx-auto lg:mx-0 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
            {slotsSliderList?.map(item => {
                return (
                    <SlotSlideBox
                        data={item}
                    />
                )
            })}
        </div>
    }


    {!!dataSlotsDescription?.length && 
        <WithBottom>
          <section class="bg-pnp/[.03] border border-pnp/[.1] rounded-[24px] sm:rounded-[30px] px-[24px] py-[24px] sm:px-[32px] sm:py-[32px] bg-gradient-to-bl from-pnp-red/[.4] to-50% ">
            <ul class=" grid max-w-xl grid-cols-1 gap-8 text-base leading-7 text-gray-700 lg:max-w-none lg:grid-cols-3">
                { dataSlotsDescription.map(item =>{
                  return (
                      <li>
                        <RichText
                            data={item.descrition}
                            styles={{
                              h3: '!text-24-26-700 mb-4 text-pnp',
                              paragraph: '!text-16-24-400 text-pnp-grey20'
                            }}
                        />
                      </li>
                  )
                })}
            </ul>
          </section>
        </WithBottom>
      }
    
    { faqData &&
        <WithBottom>
            <AccordionContainer
                data={faqData}
            />
        </WithBottom>
    }
</Layout>  
