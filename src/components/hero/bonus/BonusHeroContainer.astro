---
import RichText from '@components/richtext/RichText.astro';
import heroSlotD from '@assets/images/hero/hero-slots-d.png';
import heroSlotM from '@assets/images/hero/hero-mob-test_copy.png';
import { Image } from 'astro:assets';
 
interface Props {
    heroText?: any;
    title?: string,
    description?: string,
    textTopSpaceMobile: string,
    textBoxWidth: string,
    pictures: any[];
}

const {
    heroText = null,
    title = null,
    description = null,
    textTopSpaceMobile,
    textBoxWidth,
    pictures: [pictureM, pictureD, pictureCard]
} = Astro.props as Props;

// Styles:
const bgColor = 'bg-pnp/[.03]';
const border = 'border border-pnp/[.1]';
const margins = `mx-4 sm:mx-[4.6%] ${textTopSpaceMobile} sm:mt-[4%] sm:mb-[3%]`;
const rounded = 'rounded-[24px] sm:rounded-[32px] md:rounded-[42px] md:rounded-[48px]';

// Styles Debug Mode: ${debug}; 
// const debug = 'border border-pnp-red/[.5] sm:border-pnp-green/[.5] md:border-black/[.5] lg:border-pnp/[.5]';

// Common Styles: 
const common = `relative overflow-hidden ${border} ${bgColor} ${rounded}`; //  ${debug}

// Test:
// bg-[linear-gradient(to_right_bottom,rgba(49,84,44,0.8),rgba(16,71,52,0.8))]
---
     <div class=`hero-wrapper ${common} relative`>
        { pictureCard ? pictureCard?.format !== '.webp'
            ? <Image
                src={pictureCard?.url || 0}
                width={pictureCard?.w || 0}
                height={pictureCard?.h || 0}
                alt={pictureCard?.alternativeText || ''}
                loading="eager"
                class={`block sm:hidden absolute w-[calc(100%-32px)] sm:w-[700px] right-4 sm:-right-32 top-4 sm:top-1/2 transform  sm:-translate-y-1/2 sm:rotate-12 shadow-2xl ${rounded}`}
            />
            : <img
                src={pictureCard.url}
                width={pictureCard.w}
                height={pictureCard.h}
                alt={pictureCard.alternativeText || ''} 
                loading="eager"
                class={`block sm:hidden absolute w-[calc(100%-32px)] sm:w-[700px] right-4 sm:-right-32 top-4 sm:top-1/2 transform  sm:-translate-y-1/2 sm:rotate-12 shadow-2xl ${rounded}`}
            />
            : null
        }
        {pictureD ? pictureD.format !== '.webp'
            ? <Image
                src={pictureD.url }
                width={pictureD.w}
                height={pictureD.h}
                loading="eager"
                alt={pictureD.alternativeText || ''} 
                class={`hero-img hidden sm:block w-full`}
            />
            : <img
                src={pictureD.url}
                width={pictureD.w}
                height={pictureD.h}
                alt={pictureD.alternativeText || ''} 
                loading="eager"
                class={`hero-img hidden sm:block w-full`}
            />
            : <Image
                src={heroSlotD}
                loading="eager"
                alt={''} 
                class={`hero-img hidden sm:block w-full`}
            />
        }
        {pictureM ? pictureM.format !== '.webp' 
            ? <Image
                src={pictureM.url}
                width={pictureM.w}
                height={pictureM.h}
                loading="eager"
                alt={pictureM.alternativeText || ''}
                class={`hero-img block sm:hidden w-full`}
            /> 
            : <img
                src={pictureM.url}
                width={pictureM.w}
                height={pictureM.h}
                loading="eager"
                alt={pictureM.alternativeText || ''} 
                class={`hero-img hidden sm:block w-full`}
            />
            : <Image
                src={heroSlotM}
                loading="eager"
                alt={''} 
                class={`hero-img hidden sm:block w-full`}
            />
        }
        <div class=`hero-content w-auto h-auto flex flex-col gap-8 justify-start sm:justify-between pb-4 ${margins}`>
            <div class=`${textBoxWidth}`>
                {heroText && (
                    <RichText
                        data={heroText}
                        styles={{
                            h1: 'text-40-44-700 sm:text-34-37-700 md:text-40-44-700 lg:text-50-56-700 mb-4 sm:mb-8',
                            paragraph: 'text-16-24-400 text-pnp-grey20'
                        }}
                    />
                )}
                {!heroText && title && 
                    <h1
                        class="text-40-44-700 sm:text-34-37-700 md:text-40-44-700 lg:text-48-48-700 mb-4 sm:mb-8"
                    >
                        {title}
                    </h1>
                }
                {!heroText && description && 
                    <p class="text-16-24-400 text-pnp-grey20">
                        {description}
                    </p>
                }
            </div>
            <slot name="btn-box" />
        </div>
    </div>

<style>
    @media (min-width: 640px) { 
        .hero-wrapper {
            display: grid;
            height: 100%;
        }
        .hero-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .gr {
            z-index: 1;
        }
        .hero-content {
            display: flex;
            flex-direction: column;
            z-index: 100;
        }
        .hero-wrapper .hero-img,
        .hero-wrapper .hero-content {
            grid-area: 1/-1;
        }
    }
</style>
