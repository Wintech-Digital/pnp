---
const { block, classList, styles = null} = Astro.props;
const level = block?.level;
const children = block.children;
const stylesH1 = styles ? styles['h1'] : '';
const stylesH2 = styles ? styles['h2'] : '';
const stylesH3 = styles ? styles['h3'] : '';
const stylesH4 = styles ? styles['h4'] : '';
const stylesH5 = styles ? styles['h5'] : '';
const stylesH6 = styles ? styles['h6'] : '';
---
{
    children.map(item => {
        switch(level) {
            case 1:
                return (
                    <h1 class={`text-34-37-700 sm:text-40-48-700 mb-4 ${stylesH1} ${classList}`}>
                        {item.text}
                    </h1>
                );
            case 2:
                return (
                    <h2 class={`text-24-36-700 sm:text-34-37-700 mb-4 ${stylesH2} ${classList}`}>
                        {item.text}
                    </h2>
                );
            case 3:
                return (
                    <h3 class={`text-24-26-700 sm:text-28-34-700 mb-4 ${stylesH3} ${classList}`}>
                        {item.text}
                    </h3>
                );
            case 4:
                return (
                    <h4 class={`text-24-26-700 sm:text-28-34-700 ${stylesH4} ${classList}`}>
                        {item.text}
                    </h4>
                );
            case 5:
                return (
                    <h5 class={`text-24-26-700 sm:text-28-34-700 ${stylesH5} ${classList}`}>
                        {item.text}
                    </h5>
                );
            case 6:
                return (
                    <h6 class={`text-24-26-700 sm:text-28-34-700 ${stylesH6} ${classList}`}>
                        {item.text}
                    </h6>
                );
            default:
                return (
                    <p>
                        {item.text}
                    </p>
                );
        }
    })
}
