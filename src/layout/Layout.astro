---
import Header from '@components/header/Header';
import Footer from '@components/footer/Footer.astro';
import Breadcrumbs from '@components/breadcrumbs/Breadcrumbs.astro';
import { ViewTransitions } from 'astro:transitions';
import { getImage } from "astro:assets";
import { endpoints, fetchApi } from '@api/index';
import { parseImageData } from '@utils';

const {seo=[{metaTitle: '', metaDescription: ''}], heroPreload = null} = Astro.props;

const mobileHero = heroPreload
		? parseImageData(heroPreload?.coverImage?.data, 'mobile')
		: null;

let optimizedImage = null;
if (mobileHero) {
  optimizedImage = await getImage({
    src: mobileHero.url,
    width: mobileHero.w / 1.6,
	height: mobileHero.h / 1.6,
    format: 'webp',
  });
}
const metaTitle = seo[0]?.metaTitle;
const metaDescription = seo[0]?.metaDescription;
const controls = await fetchApi({ endpoint: endpoints.controls });
const dataControls = controls['data']?.attributes;

---
<html lang="pt" class="w-full bg-pnp-card-bg">
	<head>
		<meta name="robots" content="noindex, nofollow" />
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="description" content={metaDescription}>
		<title>{ metaTitle }</title>
		<link
			rel="icon"
			type="image/svg+xml"
			sizes="16x16"
			href="./images/p.svg"
		/>
		<link
			rel="icon"
			type="image/svg+xml"
			sizes="32x32"
			href="./images/p.svg"
		/>
		{ optimizedImage !== null && 
			<link rel="preload" href={optimizedImage?.src} as="image"/>
		}
		<ViewTransitions />
		<style>
			html, body {
				margin:0;
				padding:0;
				background-color: #00A189;
			}
		</style>
	</head>

	<body class="py-4 pl-4 pr-4 sm:p-4 md:p-6 lg:py-10  lg:px-20 bg-pnp-card-bg text-pnp w-full">
			<!-- <div class="max-w-[1360px] mx-auto relative"> -->
			<div class="max-w-[1160px] mx-auto relative">
			<Header
				client:load
				data={dataControls}
			/>
			<Breadcrumbs />
			<main>
				<slot/>
			</main>
			<Footer />
		</div>
	</body>
</html>